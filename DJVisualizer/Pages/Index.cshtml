@page 
@model DJClient.Pages.IndexModel
@using System.Linq 


@*<canvas width="@Model.BoardWidthPx" height="@Model.BoardHeightPx" id="Board"></canvas>

<script type="text/javascript">
    window.onload = () => {
        var canvas = document.getElementById("Board");
        var ctx = canvas.getContext("2d");

        

        for (row = 0; row < @Model.MaxRow; row++) {
            for (col = 0; col < @Model.MaxCol; col++) {
                ctx.font = "10px Arial";
                ctx.fillText(@Model.)
           }
        }
    }
</script>*@

<div>
    <table class="table">
        <thead>
            <tr>
                <th>Player</th>
                <th>Territories</th>
                <th>Armies</th>
                <th>Score</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var playerStat in Model.GameStatus.PlayerStats)
            {
                <tr>
                    <td>@playerStat.Name</td>
                    <td>@playerStat.Territories</td>
                    <td>@playerStat.Armies</td>
                    <td>@playerStat.Score</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<hr />

<div>
    <table class="table-bordered" >
        @for(int row = 0; row < Model.NumRows; ++row)
        {
        <tr>
            @for (int col = 0; col < Model.NumCols; ++col)
            {
                var territory = Model.GameStatus.Board.FirstOrDefault(t => t.Location.Row == row && t.Location.Column == col);
                var owner = territory?.OwnerName ?? "Unoccupied";
                <td style="min-height: 300px; min-width: 300px">
                    <div>Owner: @owner</div>
                    <div>Placed Armies: @territory?.Armies </div>
                </td>
            }
        </tr>
        }
    </table>
</div>